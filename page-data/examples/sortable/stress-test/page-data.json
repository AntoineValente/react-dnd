{
    "componentChunkName": "component---src-templates-example-template-tsx",
    "path": "/examples/sortable/stress-test",
    "result": {"data":{"currentPage":{"html":"<p>How many items can React DnD handle at the same time? There are a\nthousand items in this list. With some optimizations like updating the\nstate inside a <code class=\"language-text\">requestAnimationFrame</code> callback, it can\nhandle a few thousand items without lagging. After that, you're\nbetter off using virtual lists like\n<a href=\"https://github.com/facebook/fixed-data-table\">fixed-data-table</a>.</p>\n<p>Luckily, React DnD is designed to work great with any virtual React\ndata list components because it doesn't keep any state in the\nDOM.</p>\n<p>This example does not scroll automatically but you can add the\nscrolling with a parent drop target that compares\n<code class=\"language-text\">component.getBoundingClientRect()</code> with\n<code class=\"language-text\">monitor.getClientOffset()</code> inside its <code class=\"language-text\">hover</code>\nhandler. In fact, you are welcome to contribute this functionality to\nthis example!</p>\n<view-source name=\"04-sortable/stress-test\" component=\"sortable-stress-test\">\n</view-source>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How many items can React DnD handle at the same time? There are a\nthousand items in this list. With some optimizations like updating the\nstate inside a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"requestAnimationFrame"}]},{"type":"text","value":" callback, it can\nhandle a few thousand items without lagging. After that, you're\nbetter off using virtual lists like\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebook/fixed-data-table"},"children":[{"type":"text","value":"fixed-data-table"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Luckily, React DnD is designed to work great with any virtual React\ndata list components because it doesn't keep any state in the\nDOM."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This example does not scroll automatically but you can add the\nscrolling with a parent drop target that compares\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"component.getBoundingClientRect()"}]},{"type":"text","value":" with\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.getClientOffset()"}]},{"type":"text","value":" inside its "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"hover"}]},{"type":"text","value":"\nhandler. In fact, you are welcome to contribute this functionality to\nthis example!"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"view-source","properties":{"name":"04-sortable/stress-test","component":"sortable-stress-test"},"children":[{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"path":"/examples/sortable/stress-test","title":"Stress Test"}},"toc":{"edges":[]}},"pageContext":{}},
    "staticQueryHashes": []}